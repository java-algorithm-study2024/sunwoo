package org.example;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Array;
import java.util.*;

public class Main {
    static List<Integer> [] listArray;
    static boolean[] visit;
    static ArrayList<Integer> dfs_answer = new ArrayList<>();
    static ArrayList<Integer> bfs_answer = new ArrayList<>();


    public static void bfs(int first){
        Queue<Integer> que = new ArrayDeque<>();
        for(int i =0;i<visit.length;i++){
            visit[i] = false;
        }
        que.add(first);
        visit[first] = true;
        while (!que.isEmpty()) {
            int top = que.poll();
            visit[top] = true;
            System.out.print(top + " ");
            Collections.sort(listArray[top]);
            for(int i : listArray[top]){
                if(!visit[i]){
                    que.add(i);
                    visit[i] = true;
                }
            }
        }
    }
    public static void dfs(int first){
        visit[first] = true;
        dfs_answer.add(first);
        Collections.sort(listArray[first]);
        for(int i : listArray[first]){
            if(!visit[i]) {
                dfs(i);
            }
        }

    }
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String str = br.readLine();
        String[] st = str.split(" ");
        int nodeCount = Integer.parseInt(st[0])+1;
        int edgeCount = Integer.parseInt(st[1]);
        int first = Integer.parseInt(st[2]);
        int a,b;
        visit = new boolean[nodeCount + 1];
        listArray = new ArrayList[nodeCount];
        for (int i = 0; i < nodeCount; i++) {
            listArray[i] = new ArrayList<>();
        }
        for (int i = 0; i < edgeCount; i++) {
            str = br.readLine();
            st = str.split(" ");
            a = Integer.parseInt(st[0]);
            b = Integer.parseInt(st[1]);
            listArray[a].add(b);
            listArray[b].add(a);
        }

        dfs(first);
        for(int i =0;i<dfs_answer.size();i++){
            System.out.print(dfs_answer.get(i)+ " ");
        }
        System.out.println();
        bfs(first);
        br.close();
    }
}